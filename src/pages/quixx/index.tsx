import { useState, useEffect } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import { useForm, type SubmitHandler } from "react-hook-form";
import { atom, useAtom, useSetAtom } from "jotai";
import RowComponent from "../../components/quixx/RowComponent";
import NegativeComponent from "../../components/quixx/NegativeComponent";
import { getCookie, hasCookie } from "cookies-next";

import Score from "../../components/quixx/Score";
import { games } from "../../components/quixx/games";
import IconModal from "../../components/quixx/IconModal";

export const markerAtom = atom({
  icon: "XMarkIcon",
  fill: "primary",
  stroke: "primary",
});

export const gameAtom = atom(games.main);

export type blockType = {
  color: string;
  row: number;
  num: string;
  prev: number | null;
  id: number;
  selected: boolean;
  disabled: boolean;
};

export type rowType = {
  a: blockType;
  b: blockType;
  c: blockType;
  d: blockType;
  e: blockType;
  f: blockType;
  g: blockType;
  h: blockType;
  i: blockType;
  j: blockType;
  k: blockType;
  l: blockType;
};

export type negatives = {
  first: boolean;
  second: boolean;
  third: boolean;
  fourth: boolean;
};

type FormValues = {
  red: rowType;
  yellow: rowType;
  green: rowType;
  blue: rowType;
  negatives: negatives;
};

export const rowCountsAtom = atom({
  red: 0,
  yellow: 0,
  green: 0,
  blue: 0,
});

export const rowClosedAtom = atom({
  red: false,
  yellow: false,
  green: false,
  blue: false,
});

const Home: NextPage = () => {
  const [game, setGame] = useAtom(gameAtom);
  const setMarker = useSetAtom(markerAtom);
  const [iconModal, setIconModal] = useState(false);
  const { control, handleSubmit } = useForm<FormValues>({
    defaultValues: game,
  });

  useEffect(() => {
    if (hasCookie("markerSettings")) {
      const markerSettings = JSON.parse(getCookie("markerSettings")!);
      setMarker(markerSettings);
    }
    if (hasCookie("game")) {
      const game = games[getCookie("game") as keyof typeof games];
      setGame(game);
    }
  }, []);

  const onSubmit: SubmitHandler<FormValues> = (data) => console.log(data);

  return (
    <>
      <Head>
        <title>Zeth | Quixx</title>
        <meta name="description" content="Generated by create-t3-app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen w-full overflow-y-auto bg-base-300 p-2">
        <form onSubmit={handleSubmit(onSubmit)} className="flex flex-col gap-4">
          <div className="flex flex-col gap-2 overflow-auto scroll-smooth rounded-box bg-base-100 p-2">
            <RowComponent rowKey={"red"} control={control} rowData={game.red} />
            <RowComponent
              rowKey={"yellow"}
              control={control}
              rowData={game.yellow}
            />
            <RowComponent
              rowKey={"green"}
              control={control}
              rowData={game.green}
            />
            <RowComponent
              rowKey={"blue"}
              control={control}
              rowData={game.blue}
            />
          </div>
          <div className="flex flex-row gap-2 overflow-y-auto rounded-box bg-base-200 p-2">
            <Score control={control} />
            <NegativeComponent control={control} />
          </div>
          <div
            onClick={() => setIconModal(true)}
            className="btn btn-accent btn-block h-11"
          >
            Change Marker
          </div>
        </form>
        <IconModal open={iconModal} handleClose={() => setIconModal(false)} />
      </main>
    </>
  );
};

export default Home;
